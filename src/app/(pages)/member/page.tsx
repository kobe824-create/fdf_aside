"use client";
import FinancialCard from "@/components/financialCard";
import { useRouter } from "next/navigation";
import { useSearchParams } from "next/navigation";
import { useEffect, useState } from "react";
import axios from "axios";
import { AttachmentTypes, ContributionTypes, PenaltyTypes, UserTypes } from "@/utils/types";
import UpdateContributionPopup from "@/components/updateContributionPopup";
import TablePopup from "@/components/tablePopup";
import SharePopup from "@/components/sharePopup";
// import formatMeetingDate from "@/utils/timeFormatter";
import { useAuth } from "@/lib/auth/authProvider";
// import { saveAs } from "file-saver";
import RotatingWheelLoader from "@/components/rotatingWheel";

export default function Member() {
    const router = useRouter();
    const params = useSearchParams();
    const id = params.get("id");


    const [member, setMember] = useState<UserTypes | null>(null);
    const [popup, setPopup] = useState("updateContribution");
    const [popupDisplay, setPopupDisplay] = useState(false);
    const [contributions, setContributions] = useState<ContributionTypes[]>([]);
    const [pendingContributions, setPendingContributions] = useState<ContributionTypes[]>([])
    const [updateData, setUpdateData] = useState(0);
    const [totalContributions, setTotalContributions] = useState(0);
    const [totalPendingContributions, setTotalPendingContributions] = useState(0);
    const [meetingAttachments, setMeetingAttachments] = useState<AttachmentTypes[] | null>(null);

    const [penalties, setPenalties] = useState<PenaltyTypes[]>([]);
    const [totalPenalties, setTotalPenalties] = useState(0);
    const [share, setShare] = useState(0);



    useEffect(() => {
        axios.post("/api/users/getOne", { id }).then((res) => {
            setMember(res.data.user);
            console.log(res.data.user);
        }).catch((err) => {
            console.log(err);
        });
        axios.post("/api/contributions/getUserContributions", { id }).then((res) => {
            setContributions(res.data.contributions.filter((contribution: ContributionTypes) => {
                return (contribution.status === "paid")
            }));
            setPendingContributions(res.data.contributions.filter((contribution: ContributionTypes) => {
                return (contribution.status === "unpaid")
            }));
        }).catch((err) => {
            console.log(err);
        });
        axios.get("/api/attachments/get").then((res) => {
            setMeetingAttachments(res.data.attachments);
        }).catch((err) => {
            console.log(err);
        });
        axios.post("/api/penalties/getUserPenalties", { id }).then((res) => {
            setPenalties(res.data.penalties);
        }).catch((err) => {
            console.log(err);
        });

    }, [id, updateData]);


    useEffect(() => {
        setTotalContributions(contributions.reduce((acc, contribution) => {
            return acc + Number(contribution.amount);
        }, 0));
        setTotalPendingContributions(pendingContributions.reduce((acc, contribution) => {
            return acc + Number(contribution.amount);
        }, 0));

    }, [contributions, pendingContributions])

    useEffect(() => {
        setTotalPenalties(penalties.reduce((acc, penalty) => {
            return acc + Number(penalty.amount);
        },
            0));
    }, [penalties])


    useEffect(() => {
        setShare(totalContributions - totalPenalties);
    }, [totalContributions, totalPenalties]);

    const { user } = useAuth();


    // const handleDownload = (fileUrl: string, fileName: string) => {
    //     saveAs(fileUrl, fileName);
    // };

    if (!member || !meetingAttachments) {
        return (
            <div className="loading-wheel">
                <RotatingWheelLoader />
            </div>
        )
    }

    return (
        <div className="my-account-page">
            <div className="popup-background"
                style={{ display: popupDisplay ? "flex" : "none" }}
                onClick={() => {
                    setPopupDisplay(false);
                }}
            >
                {
                    popup === "updateContribution" ? (

                        <UpdateContributionPopup
                            closePopup={() => setPopupDisplay(false)}
                            id={id || ""}
                            updateData={() => {
                                setUpdateData(updateData + 1);
                            }}
                        />) : popup === "contributionstable" ? (
                            <TablePopup
                                data={{
                                    tableHeaders: [
                                        "Payment Date",
                                        "Amount",
                                        "Penalty Fee",
                                        "Status"
                                    ],
                                    tableData: contributions.map((contribution) => {
                                        return [
                                            String(contribution.date).split("T")[0],
                                            String(contribution.amount),
                                            String(0),
                                            String(contribution.status)
                                        ];
                                    }),
                                    type: "normal",
                                    title: "Contributions"
                                }}
                                close={() => setPopupDisplay(false)}
                            />
                        ) : popup === "pending" ? (
                            <TablePopup
                                data={{
                                    tableHeaders: [
                                        "Payment Date",
                                        "Amount",
                                        "Penalty Fee",
                                        "Status"
                                    ],
                                    tableData: pendingContributions.map((contribution) => {
                                        return [
                                            String(contribution.date).split("T")[0],
                                            String(contribution.amount),
                                            String((contribution.penalties ?? []).reduce((acc, penalty) => acc + (typeof penalty === 'object' && 'amount' in penalty ? penalty.amount : 0), 0)),
                                            String(contribution.status)
                                        ];
                                    }),
                                    type: "normal",
                                    title: "Pending Contributions"

                                }}
                                close={() => setPopupDisplay(false)}
                            />
                        ) :
                        popup === "penalties" ? (
                            <TablePopup
                                data={{
                                    tableHeaders: [
                                        "Amount",
                                        "Reason",
                                        "Date"
                                    ],
                                    tableData: penalties.map((penalty) => {
                                        return [
                                            String(penalty.amount),
                                            String(penalty.reason),
                                            String(penalty.date).split("T")[0]
                                        ];
                                    }),
                                    type: "normal",
                                    title: "Penalties"
                                }}
                                close={() => setPopupDisplay(false)}
                            />
                        ) :


                            < SharePopup
                                closePopup={() => setPopupDisplay(false)}
                                amount={share}
                            />
                }
            </div>
            {
                user && user.role === "admin" && (
                    <div className="my-account-heading">
                        <button className="edit-btn"
                            onClick={() => {
                                router.push(`/editMember?id=${id}`);
                            }}
                        >
                            Edit Member
                        </button>
                        <button className="tertially-btn"
                            onClick={() => {
                                setPopup("updateContribution");
                                setPopupDisplay(true);
                            }}
                        >
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                <path d="M12 5V19" stroke="white" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                                <path d="M5 12H19" stroke="white" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                            </svg>
                            Update contribution
                        </button>
                    </div>
                )}
            <div className="my-account-top-container">
                <div className="my-account-prersonalised">
                    <div className="my-account-personalised-img-cont">
                        <img src={member?.image_url} alt="profile" />
                    </div>
                    <p>{member?.firstname + " " + member?.lastname}</p>
                </div>
                <div className="member-contacts">
                    <p>
                        <svg xmlns="http://www.w3.org/2000/svg" width="14" height="13" viewBox="0 0 14 13" fill="none">
                            <path fillRule="evenodd" clipRule="evenodd" d="M2.03045 0.876777C2.86275 0.0480372 4.23316 0.195553 4.93008 1.12779L5.79223 2.28105C6.35929 3.03959 6.30926 4.09974 5.63614 4.76998L5.47289 4.93253C5.46576 4.95327 5.44847 5.01845 5.46766 5.14235C5.51088 5.42135 5.74354 6.01318 6.72023 6.98569C7.69658 7.95786 8.29178 8.19061 8.57433 8.23401C8.70239 8.25368 8.76937 8.23535 8.7901 8.22811L9.06906 7.95035C9.66745 7.35452 10.5869 7.24314 11.3278 7.64645L12.6341 8.35754C13.7526 8.96643 14.0352 10.4889 13.1188 11.4014L12.1475 12.3685C11.8415 12.6732 11.43 12.9273 10.9278 12.9742C9.69092 13.0896 6.80687 12.9423 3.77658 9.92499C0.947444 7.10796 0.404535 4.65137 0.335844 3.44099L0.847801 3.41185L0.335843 3.44099C0.30111 2.82895 0.589921 2.31113 0.957293 1.94534L2.03045 0.876777ZM4.10909 1.74327C3.7627 1.27992 3.11708 1.24308 2.75357 1.60504L1.68041 2.6736C1.45484 2.89821 1.34631 3.14574 1.35976 3.38272C1.41434 4.3444 1.8528 6.56115 4.4997 9.19672C7.27657 11.9617 9.84129 12.0441 10.8326 11.9516C11.0351 11.9327 11.2365 11.8273 11.4244 11.6402L12.3957 10.6731C12.7905 10.28 12.7034 9.56423 12.1442 9.25984L10.838 8.54876C10.4773 8.35241 10.0547 8.41718 9.79218 8.67861L9.48078 8.98867L9.11923 8.62454C9.48078 8.98867 9.4803 8.98916 9.4798 8.98965L9.4788 8.99064L9.47672 8.99268L9.47228 8.99695L9.46226 9.00629C9.45507 9.01285 9.44685 9.02005 9.43756 9.02775C9.419 9.04316 9.39616 9.0606 9.36886 9.07891C9.31411 9.11563 9.24183 9.15558 9.151 9.18946C8.96581 9.25855 8.72161 9.29565 8.41885 9.24915C7.82621 9.15812 7.04114 8.75352 5.99712 7.71396C4.95344 6.67476 4.546 5.89222 4.45422 5.29979C4.40729 4.99686 4.44472 4.75222 4.51454 4.56664C4.54877 4.47569 4.58909 4.40337 4.6261 4.34867C4.64456 4.32139 4.66213 4.29858 4.67763 4.28006C4.68538 4.27079 4.69262 4.26259 4.69921 4.25542L4.7086 4.24544L4.7129 4.24101L4.71495 4.23894L4.71594 4.23794C4.71643 4.23745 4.71692 4.23697 5.07848 4.6011L4.71692 4.23697L4.91302 4.04171C5.20606 3.74992 5.24711 3.26555 4.97124 2.89653L4.10909 1.74327Z" fill="#566577" />
                        </svg>
                        <span>Phone No:</span>
                        <span>{member?.phoneNumber}</span>
                    </p>
                    <p>
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="12" viewBox="0 0 16 12" fill="none">
                            <path fillRule="evenodd" clipRule="evenodd" d="M5.99968 2.1665C4.98715 2.1665 4.16634 2.98732 4.16634 3.99984C4.16634 5.01236 4.98715 5.83317 5.99968 5.83317C7.0122 5.83317 7.83301 5.01236 7.83301 3.99984C7.83301 2.98732 7.0122 2.1665 5.99968 2.1665ZM5.16634 3.99984C5.16634 3.5396 5.53944 3.1665 5.99968 3.1665C6.45991 3.1665 6.83301 3.5396 6.83301 3.99984C6.83301 4.46007 6.45991 4.83317 5.99968 4.83317C5.53944 4.83317 5.16634 4.46007 5.16634 3.99984Z" fill="#566577" />
                            <path fillRule="evenodd" clipRule="evenodd" d="M5.99968 6.1665C5.2025 6.1665 4.45608 6.327 3.89045 6.60981C3.35473 6.87768 2.83301 7.34023 2.83301 7.99984L2.83292 8.04149C2.8319 8.38173 2.83018 8.95463 3.37316 9.34767C3.62513 9.53006 3.95761 9.64639 4.36947 9.72049C4.78514 9.79528 5.31782 9.83317 5.99968 9.83317C6.68153 9.83317 7.21421 9.79528 7.62988 9.72049C8.04175 9.64639 8.37422 9.53006 8.62619 9.34767C9.16917 8.95463 9.16745 8.38173 9.16643 8.04149L9.16634 7.99984C9.16634 7.34023 8.64462 6.87768 8.1089 6.60981C7.54327 6.327 6.79685 6.1665 5.99968 6.1665ZM3.83301 7.99984C3.83301 7.92306 3.90824 7.71895 4.33766 7.50424C4.73718 7.30449 5.32409 7.1665 5.99968 7.1665C6.67526 7.1665 7.26217 7.30449 7.66169 7.50424C8.09111 7.71895 8.16634 7.92306 8.16634 7.99984C8.16634 8.40281 8.14068 8.46462 8.03983 8.53762C7.95846 8.59652 7.79094 8.67545 7.4528 8.73629C7.11848 8.79644 6.65115 8.83317 5.99968 8.83317C5.3482 8.83317 4.88087 8.79644 4.54655 8.73629C4.20841 8.67545 4.04089 8.59652 3.95952 8.53762C3.85867 8.46462 3.83301 8.40281 3.83301 7.99984Z" fill="#566577" />
                            <path d="M12.6663 6.49984C12.9425 6.49984 13.1663 6.27598 13.1663 5.99984C13.1663 5.7237 12.9425 5.49984 12.6663 5.49984H9.99967C9.72353 5.49984 9.49967 5.7237 9.49967 5.99984C9.49967 6.27598 9.72353 6.49984 9.99967 6.49984H12.6663Z" fill="#566577" />
                            <path d="M13.1663 3.99984C13.1663 4.27598 12.9425 4.49984 12.6663 4.49984H9.33301C9.05687 4.49984 8.83301 4.27598 8.83301 3.99984C8.83301 3.7237 9.05687 3.49984 9.33301 3.49984H12.6663C12.9425 3.49984 13.1663 3.7237 13.1663 3.99984Z" fill="#566577" />
                            <path d="M12.6663 8.49984C12.9425 8.49984 13.1663 8.27598 13.1663 7.99984C13.1663 7.7237 12.9425 7.49984 12.6663 7.49984H10.6663C10.3902 7.49984 10.1663 7.7237 10.1663 7.99984C10.1663 8.27598 10.3902 8.49984 10.6663 8.49984H12.6663Z" fill="#566577" />
                            <path fillRule="evenodd" clipRule="evenodd" d="M6.62873 0.166504H9.37062C10.5958 0.166494 11.5662 0.166486 12.3257 0.268594C13.1073 0.37368 13.7399 0.595091 14.2388 1.094C14.7378 1.59291 14.9592 2.22554 15.0643 3.00716C15.1664 3.76663 15.1664 4.73704 15.1663 5.9622V6.03744C15.1664 7.26261 15.1664 8.23305 15.0643 8.99252C14.9592 9.77413 14.7378 10.4068 14.2388 10.9057C13.7399 11.4046 13.1073 11.626 12.3257 11.7311C11.5662 11.8332 10.5958 11.8332 9.37065 11.8332H6.62873C5.40357 11.8332 4.43313 11.8332 3.67366 11.7311C2.89205 11.626 2.25941 11.4046 1.7605 10.9057C1.2616 10.4068 1.04018 9.77413 0.935098 8.99252C0.83299 8.23304 0.832998 7.26263 0.833008 6.03746V5.96223C0.832998 4.73706 0.83299 3.76663 0.935098 3.00716C1.04018 2.22554 1.2616 1.59291 1.7605 1.094C2.25941 0.595091 2.89205 0.37368 3.67366 0.268594C4.43313 0.166486 5.40356 0.166494 6.62873 0.166504ZM3.80691 1.25968C3.13618 1.34985 2.74975 1.51897 2.46761 1.80111C2.18547 2.08325 2.01636 2.46968 1.92618 3.1404C1.83407 3.82551 1.83301 4.72862 1.83301 5.99984C1.83301 7.27105 1.83407 8.17416 1.92618 8.85927C2.01636 9.53 2.18547 9.91643 2.46761 10.1986C2.74975 10.4807 3.13618 10.6498 3.80691 10.74C4.49202 10.8321 5.39513 10.8332 6.66634 10.8332H9.33301C10.6042 10.8332 11.5073 10.8321 12.1924 10.74C12.8632 10.6498 13.2496 10.4807 13.5317 10.1986C13.8139 9.91643 13.983 9.53 14.0732 8.85927C14.1653 8.17416 14.1663 7.27105 14.1663 5.99984C14.1663 4.72862 14.1653 3.82551 14.0732 3.1404C13.983 2.46968 13.8139 2.08325 13.5317 1.80111C13.2496 1.51897 12.8632 1.34985 12.1924 1.25968C11.5073 1.16757 10.6042 1.1665 9.33301 1.1665H6.66634C5.39513 1.1665 4.49202 1.16757 3.80691 1.25968Z" fill="#566577" />
                        </svg>
                        <span>Member ID:</span>
                        <span>{member?.identification ? member.identification : "Not Provided"}</span>
                    </p>
                    <p>
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="12" viewBox="0 0 16 12" fill="none">
                            <path fillRule="evenodd" clipRule="evenodd" d="M6.62873 0.166504H9.37062C10.5958 0.166494 11.5662 0.166485 12.3257 0.268594C13.1073 0.373679 13.7399 0.595091 14.2388 1.094C14.7378 1.59291 14.9592 2.22554 15.0643 3.00716C15.1664 3.76663 15.1664 4.73706 15.1663 5.96223V6.03745C15.1664 7.26262 15.1664 8.23304 15.0643 8.99252C14.9592 9.77414 14.7378 10.4068 14.2388 10.9057C13.7399 11.4046 13.1073 11.626 12.3257 11.7311C11.5662 11.8332 10.5958 11.8332 9.37062 11.8332H6.62873C5.40356 11.8332 4.43314 11.8332 3.67366 11.7311C2.89204 11.626 2.25941 11.4046 1.7605 10.9057C1.26159 10.4068 1.04018 9.77414 0.935098 8.99252C0.832989 8.23304 0.832997 7.26262 0.833008 6.03745V5.96223C0.832997 4.73705 0.832989 3.76663 0.935098 3.00716C1.04018 2.22554 1.26159 1.59291 1.7605 1.094C2.25941 0.595091 2.89205 0.373679 3.67366 0.268594C4.43314 0.166485 5.40356 0.166494 6.62873 0.166504ZM3.80691 1.25968C3.13618 1.34985 2.74975 1.51897 2.46761 1.80111C2.18547 2.08325 2.01636 2.46968 1.92618 3.1404C1.83407 3.82551 1.83301 4.72862 1.83301 5.99984C1.83301 7.27105 1.83407 8.17416 1.92618 8.85927C2.01636 9.53 2.18547 9.91643 2.46761 10.1986C2.74975 10.4807 3.13618 10.6498 3.80691 10.74C4.49202 10.8321 5.39513 10.8332 6.66634 10.8332H9.33301C10.6042 10.8332 11.5073 10.8321 12.1924 10.74C12.8632 10.6498 13.2496 10.4807 13.5317 10.1986C13.8139 9.91643 13.983 9.53 14.0732 8.85927C14.1653 8.17416 14.1663 7.27105 14.1663 5.99984C14.1663 4.72862 14.1653 3.82551 14.0732 3.1404C13.983 2.46968 13.8139 2.08325 13.5317 1.80111C13.2496 1.51897 12.8632 1.34985 12.1924 1.25968C11.5073 1.16757 10.6042 1.1665 9.33301 1.1665H6.66634C5.39513 1.1665 4.49202 1.16757 3.80691 1.25968ZM3.61556 3.01308C3.79235 2.80094 4.10763 2.77228 4.31977 2.94906L5.75903 4.14845C6.381 4.66676 6.81283 5.02545 7.1774 5.25992C7.5303 5.4869 7.76963 5.56309 7.99968 5.56309C8.22972 5.56309 8.46905 5.4869 8.82195 5.25992C9.18652 5.02545 9.61835 4.66676 10.2403 4.14845L11.6796 2.94906C11.8917 2.77228 12.207 2.80094 12.3838 3.01308C12.5606 3.22522 12.5319 3.5405 12.3198 3.71728L10.8554 4.93755C10.2645 5.42999 9.7856 5.82912 9.36289 6.10099C8.92256 6.38419 8.49373 6.56309 7.99968 6.56309C7.50562 6.56309 7.07679 6.38419 6.63646 6.10099C6.21375 5.82912 5.73482 5.42999 5.14392 4.93756L3.67958 3.71728C3.46744 3.5405 3.43878 3.22522 3.61556 3.01308Z" fill="#566577" />
                        </svg>
                        <span>Email:</span>
                        <span>{member?.email ? member.email : "Not Provided"}</span>
                    </p>
                    <p>
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="12" viewBox="0 0 16 12" fill="none">
                            <path fillRule="evenodd" clipRule="evenodd" d="M5.99968 2.1665C4.98715 2.1665 4.16634 2.98732 4.16634 3.99984C4.16634 5.01236 4.98715 5.83317 5.99968 5.83317C7.0122 5.83317 7.83301 5.01236 7.83301 3.99984C7.83301 2.98732 7.0122 2.1665 5.99968 2.1665ZM5.16634 3.99984C5.16634 3.5396 5.53944 3.1665 5.99968 3.1665C6.45991 3.1665 6.83301 3.5396 6.83301 3.99984C6.83301 4.46007 6.45991 4.83317 5.99968 4.83317C5.53944 4.83317 5.16634 4.46007 5.16634 3.99984Z" fill="#566577" />
                            <path fillRule="evenodd" clipRule="evenodd" d="M5.99968 6.1665C5.2025 6.1665 4.45608 6.327 3.89045 6.60981C3.35473 6.87768 2.83301 7.34023 2.83301 7.99984L2.83292 8.04149C2.8319 8.38173 2.83018 8.95463 3.37316 9.34767C3.62513 9.53006 3.95761 9.64639 4.36947 9.72049C4.78514 9.79528 5.31782 9.83317 5.99968 9.83317C6.68153 9.83317 7.21421 9.79528 7.62988 9.72049C8.04175 9.64639 8.37422 9.53006 8.62619 9.34767C9.16917 8.95463 9.16745 8.38173 9.16643 8.04149L9.16634 7.99984C9.16634 7.34023 8.64462 6.87768 8.1089 6.60981C7.54327 6.327 6.79685 6.1665 5.99968 6.1665ZM3.83301 7.99984C3.83301 7.92306 3.90824 7.71895 4.33766 7.50424C4.73718 7.30449 5.32409 7.1665 5.99968 7.1665C6.67526 7.1665 7.26217 7.30449 7.66169 7.50424C8.09111 7.71895 8.16634 7.92306 8.16634 7.99984C8.16634 8.40281 8.14068 8.46462 8.03983 8.53762C7.95846 8.59652 7.79094 8.67545 7.4528 8.73629C7.11848 8.79644 6.65115 8.83317 5.99968 8.83317C5.3482 8.83317 4.88087 8.79644 4.54655 8.73629C4.20841 8.67545 4.04089 8.59652 3.95952 8.53762C3.85867 8.46462 3.83301 8.40281 3.83301 7.99984Z" fill="#566577" />
                            <path d="M12.6663 6.49984C12.9425 6.49984 13.1663 6.27598 13.1663 5.99984C13.1663 5.7237 12.9425 5.49984 12.6663 5.49984H9.99967C9.72353 5.49984 9.49967 5.7237 9.49967 5.99984C9.49967 6.27598 9.72353 6.49984 9.99967 6.49984H12.6663Z" fill="#566577" />
                            <path d="M13.1663 3.99984C13.1663 4.27598 12.9425 4.49984 12.6663 4.49984H9.33301C9.05687 4.49984 8.83301 4.27598 8.83301 3.99984C8.83301 3.7237 9.05687 3.49984 9.33301 3.49984H12.6663C12.9425 3.49984 13.1663 3.7237 13.1663 3.99984Z" fill="#566577" />
                            <path d="M12.6663 8.49984C12.9425 8.49984 13.1663 8.27598 13.1663 7.99984C13.1663 7.7237 12.9425 7.49984 12.6663 7.49984H10.6663C10.3902 7.49984 10.1663 7.7237 10.1663 7.99984C10.1663 8.27598 10.3902 8.49984 10.6663 8.49984H12.6663Z" fill="#566577" />
                            <path fillRule="evenodd" clipRule="evenodd" d="M6.62873 0.166504H9.37062C10.5958 0.166494 11.5662 0.166486 12.3257 0.268594C13.1073 0.37368 13.7399 0.595091 14.2388 1.094C14.7378 1.59291 14.9592 2.22554 15.0643 3.00716C15.1664 3.76663 15.1664 4.73704 15.1663 5.9622V6.03744C15.1664 7.26261 15.1664 8.23305 15.0643 8.99252C14.9592 9.77413 14.7378 10.4068 14.2388 10.9057C13.7399 11.4046 13.1073 11.626 12.3257 11.7311C11.5662 11.8332 10.5958 11.8332 9.37065 11.8332H6.62873C5.40357 11.8332 4.43313 11.8332 3.67366 11.7311C2.89205 11.626 2.25941 11.4046 1.7605 10.9057C1.2616 10.4068 1.04018 9.77413 0.935098 8.99252C0.83299 8.23304 0.832998 7.26263 0.833008 6.03746V5.96223C0.832998 4.73706 0.83299 3.76663 0.935098 3.00716C1.04018 2.22554 1.2616 1.59291 1.7605 1.094C2.25941 0.595091 2.89205 0.37368 3.67366 0.268594C4.43313 0.166486 5.40356 0.166494 6.62873 0.166504ZM3.80691 1.25968C3.13618 1.34985 2.74975 1.51897 2.46761 1.80111C2.18547 2.08325 2.01636 2.46968 1.92618 3.1404C1.83407 3.82551 1.83301 4.72862 1.83301 5.99984C1.83301 7.27105 1.83407 8.17416 1.92618 8.85927C2.01636 9.53 2.18547 9.91643 2.46761 10.1986C2.74975 10.4807 3.13618 10.6498 3.80691 10.74C4.49202 10.8321 5.39513 10.8332 6.66634 10.8332H9.33301C10.6042 10.8332 11.5073 10.8321 12.1924 10.74C12.8632 10.6498 13.2496 10.4807 13.5317 10.1986C13.8139 9.91643 13.983 9.53 14.0732 8.85927C14.1653 8.17416 14.1663 7.27105 14.1663 5.99984C14.1663 4.72862 14.1653 3.82551 14.0732 3.1404C13.983 2.46968 13.8139 2.08325 13.5317 1.80111C13.2496 1.51897 12.8632 1.34985 12.1924 1.25968C11.5073 1.16757 10.6042 1.1665 9.33301 1.1665H6.66634C5.39513 1.1665 4.49202 1.16757 3.80691 1.25968Z" fill="#566577" />
                        </svg>
                        <span>Joining Date:</span>
                        <span>{member?.createdAt.split("T")[0]}</span>
                    </p>
                </div>
            </div>
            <div className="financial-cards-wrapper">
                <FinancialCard
                    label="Share"
                    amount={share}
                    style={{ gridColumn: "1 / span 2", gridRow: "1" }}
                    onclick={() => {
                        setPopup("sharepopup");
                        setPopupDisplay(true);
                    }}
                />

                <FinancialCard
                    label="Pending Contributions"
                    amount={totalPendingContributions}
                    style={{ gridColumn: "1", gridRow: "2" }}
                    onclick={() => {
                        setPopup("pending");
                        setPopupDisplay(true);
                    }}
                />

                <FinancialCard
                    label="Penalties"
                    amount={totalPenalties}
                    style={{ gridColumn: "2", gridRow: "2" }}
                    onclick={() => {
                        setPopup("penalties");
                        setPopupDisplay(true);
                    }}
                />

                <FinancialCard
                    label="Total Contributions"
                    amount={totalContributions}
                    style={{ gridColumn: "1 / span 2", gridRow: "3" }}
                    onclick={() => {
                        setPopup("contributionstable");
                        setPopupDisplay(true);
                    }}
                />
            </div>

            <div className="my-account-bottom-container">
                <div className="investment-allocation-cont">
                    <h3>
                        Investment Allocation
                    </h3>
                    <table className="investment-table">
                        <thead>
                            <tr>
                                <th>Category</th>
                                <th>Share</th>
                                <th>Percentage</th>
                            </tr>
                        </thead>
                        <tbody>
                            {/* <tr>
                                <td>General Investment</td>
                                <td>100000</td>
                                <td>10000</td>
                            </tr> */}
                            <tr>
                                <td>Land Investment</td>
                                <td>300000</td>
                                <td>10%</td>
                            </tr>
                            <tr>
                                <td>Investment2</td>
                                <td>300000</td>
                                <td>20%</td>
                            </tr>
                            <tr>
                                <td>Investment3</td>
                                <td>750000</td>
                                <td>5%</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                {/* <div className="middle-cont">
                    <h3>Latest Meeting Reports</h3>
                    <div className="meeting-reports">
                        {
                            meetingAttachments.slice(0, 3).map((attachment, index) => {
                                return (
                                    <div className="meeting-report" key={index}>
                                        <div className="report-document-type">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="12" height="13" viewBox="0 0 12 13" fill="none">
                                                <path d="M12 8.5C12 8.63261 11.9473 8.75979 11.8536 8.85355C11.7598 8.94732 11.6326 9 11.5 9H10V10H11C11.1326 10 11.2598 10.0527 11.3536 10.1464C11.4473 10.2402 11.5 10.3674 11.5 10.5C11.5 10.6326 11.4473 10.7598 11.3536 10.8536C11.2598 10.9473 11.1326 11 11 11H10V12C10 12.1326 9.94732 12.2598 9.85355 12.3536C9.75979 12.4473 9.63261 12.5 9.5 12.5C9.36739 12.5 9.24021 12.4473 9.14645 12.3536C9.05268 12.2598 9 12.1326 9 12V8.5C9 8.36739 9.05268 8.24021 9.14645 8.14645C9.24021 8.05268 9.36739 8 9.5 8H11.5C11.6326 8 11.7598 8.05268 11.8536 8.14645C11.9473 8.24021 12 8.36739 12 8.5ZM3.75 9.75C3.75 10.2141 3.56563 10.6592 3.23744 10.9874C2.90925 11.3156 2.46413 11.5 2 11.5H1.5V12C1.5 12.1326 1.44732 12.2598 1.35355 12.3536C1.25979 12.4473 1.13261 12.5 1 12.5C0.867392 12.5 0.740215 12.4473 0.646447 12.3536C0.552679 12.2598 0.5 12.1326 0.5 12V8.5C0.5 8.36739 0.552679 8.24021 0.646447 8.14645C0.740215 8.05268 0.867392 8 1 8H2C2.46413 8 2.90925 8.18437 3.23744 8.51256C3.56563 8.84075 3.75 9.28587 3.75 9.75ZM2.75 9.75C2.75 9.55109 2.67098 9.36032 2.53033 9.21967C2.38968 9.07902 2.19891 9 2 9H1.5V10.5H2C2.19891 10.5 2.38968 10.421 2.53033 10.2803C2.67098 10.1397 2.75 9.94891 2.75 9.75ZM8.25 10.25C8.25 10.8467 8.01295 11.419 7.59099 11.841C7.16903 12.2629 6.59674 12.5 6 12.5H5C4.86739 12.5 4.74021 12.4473 4.64645 12.3536C4.55268 12.2598 4.5 12.1326 4.5 12V8.5C4.5 8.36739 4.55268 8.24021 4.64645 8.14645C4.74021 8.05268 4.86739 8 5 8H6C6.59674 8 7.16903 8.23705 7.59099 8.65901C8.01295 9.08097 8.25 9.65326 8.25 10.25ZM7.25 10.25C7.25 9.91848 7.1183 9.60054 6.88388 9.36612C6.64946 9.1317 6.33152 9 6 9H5.5V11.5H6C6.33152 11.5 6.64946 11.3683 6.88388 11.1339C7.1183 10.8995 7.25 10.5815 7.25 10.25ZM0.5 6V1.5C0.5 1.23478 0.605357 0.98043 0.792893 0.792893C0.98043 0.605357 1.23478 0.5 1.5 0.5H7.5C7.56568 0.499949 7.63073 0.512838 7.69143 0.537932C7.75212 0.563026 7.80728 0.599833 7.85375 0.64625L11.3538 4.14625C11.4002 4.19272 11.437 4.24788 11.4621 4.30858C11.4872 4.36927 11.5001 4.43432 11.5 4.5V6C11.5 6.13261 11.4473 6.25979 11.3536 6.35355C11.2598 6.44732 11.1326 6.5 11 6.5C10.8674 6.5 10.7402 6.44732 10.6464 6.35355C10.5527 6.25979 10.5 6.13261 10.5 6V5H7.5C7.36739 5 7.24021 4.94732 7.14645 4.85355C7.05268 4.75979 7 4.63261 7 4.5V1.5H1.5V6C1.5 6.13261 1.44732 6.25979 1.35355 6.35355C1.25979 6.44732 1.13261 6.5 1 6.5C0.867392 6.5 0.740215 6.44732 0.646447 6.35355C0.552679 6.25979 0.5 6.13261 0.5 6ZM8 4H9.79313L8 2.20688V4Z" fill="#1C1C1C" />
                                            </svg>
                                        </div>
                                        <div className="meeting-name">
                                            <h4>{attachment.name.length > 20 ? attachment.name.slice(0, 20) + "..." : attachment.name}</h4>
                                            <p>{Math.floor(attachment.size / 1000)}MB / {formatMeetingDate(attachment.createdAt.split("T")[0], attachment.createdAt.split("T")[1], null)} / Admin</p>
                                        </div>
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none"
                                            onClick={() => {
                                                handleDownload(attachment.url, attachment.name)
                                            }}
                                        >
                                            <path d="M15.5 9.875V14.25C15.5 14.5815 15.3683 14.8995 15.1339 15.1339C14.8995 15.3683 14.5815 15.5 14.25 15.5H1.75C1.41848 15.5 1.10054 15.3683 0.866116 15.1339C0.631696 14.8995 0.5 14.5815 0.5 14.25V9.875C0.5 9.70924 0.565848 9.55027 0.683058 9.43306C0.800269 9.31585 0.95924 9.25 1.125 9.25C1.29076 9.25 1.44973 9.31585 1.56694 9.43306C1.68415 9.55027 1.75 9.70924 1.75 9.875V14.25H14.25V9.875C14.25 9.70924 14.3158 9.55027 14.4331 9.43306C14.5503 9.31585 14.7092 9.25 14.875 9.25C15.0408 9.25 15.1997 9.31585 15.3169 9.43306C15.4342 9.55027 15.5 9.70924 15.5 9.875ZM7.55781 10.3172C7.61586 10.3753 7.68479 10.4214 7.76066 10.4529C7.83654 10.4843 7.91787 10.5005 8 10.5005C8.08213 10.5005 8.16346 10.4843 8.23934 10.4529C8.31521 10.4214 8.38414 10.3753 8.44219 10.3172L11.5672 7.19219C11.6253 7.13412 11.6713 7.06518 11.7027 6.98931C11.7342 6.91344 11.7503 6.83212 11.7503 6.75C11.7503 6.66788 11.7342 6.58656 11.7027 6.51069C11.6713 6.43482 11.6253 6.36588 11.5672 6.30781C11.5091 6.24974 11.4402 6.20368 11.3643 6.17225C11.2884 6.14083 11.2071 6.12465 11.125 6.12465C11.0429 6.12465 10.9616 6.14083 10.8857 6.17225C10.8098 6.20368 10.7409 6.24974 10.6828 6.30781L8.625 8.36641V1.125C8.625 0.95924 8.55915 0.800269 8.44194 0.683058C8.32473 0.565848 8.16576 0.5 8 0.5C7.83424 0.5 7.67527 0.565848 7.55806 0.683058C7.44085 0.800269 7.375 0.95924 7.375 1.125V8.36641L5.31719 6.30781C5.19991 6.19054 5.04085 6.12465 4.875 6.12465C4.70915 6.12465 4.55009 6.19054 4.43281 6.30781C4.31554 6.42509 4.24965 6.58415 4.24965 6.75C4.24965 6.91585 4.31554 7.07491 4.43281 7.19219L7.55781 10.3172Z" fill="#1C1C1C" />
                                        </svg>
                                    </div>
                                )
                            })
                        }
                    </div>

                </div> */}
            
            </div>
        </div>
    );
}